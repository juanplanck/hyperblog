Este es el curso de git
con todos los comandos que conocemos hasta el momento y iremos agragando comando cada vez que tengamos uno nuevo 
cd		cambiar directorio
mkdir		crear una carpeta
pwd		conocer el link de tu carpeta
git init	iniciar repositorio
touch vacio.txt	crear un archivo vacio
ls		ver mis archivos
cat		revisar que texto tiene un archivo
git status	mira el estado de los archivos que se encuentran en esta carpeta
git add history.txt	añade a un estado de espera para despues poder guardarlo exitosamente
git rm --cached		volver al estado de no guardado en el repo
git config		configurar de una manera adecuada git
git config --list	muestra la configuracion total
git config --global user.name "Juan Carlos Bautista Rodriguez"
git config --global user.email "jubautista@novopayment.com"
git commit -m "comentario de commit"
git log <nombre de archivo>
git show    donde se puende ver los cambios que se han realizado sobre un documento
git diff <idnew> <idold> para sacar estos id podemos sacarlos con git log
git reset <idal que quieres volver> --hard tener cuidado porque borra los cambios que ya habias hecho
git reset <idal que quieres volver> -soft en este queda en espera de añadir.
git log --stat ver cuantos cambios se hicieron
cuando es muy largo puedo ir arriba y abjo con las flechas y si quiero salir le dos (Q)
git checkout <id> <nombre del archivo>
git checkout master <nombre del archivo> aqui podemos ver los cambios que estan en la actualidad

git log --oneline - Te muestra el id commit y el título del commit.
git log --decorate- Te muestra donde se encuentra el head point en el log.
git log --stat - Explica el número de líneas que se cambiaron brevemente.
git log -p- Explica el número de líneas que se cambiaron y te muestra que se cambió en el contenido.
git shortlog - Indica que commits ha realizado un usuario, mostrando el usuario y el titulo de sus commits.
git log --graph --oneline --decorate y
git log --pretty=format:"%cn hizo un commit %h el dia %cd" - Muestra mensajes personalizados de los commits.
git log -3 - Limitamos el número de commits.
git log --after=“2018-1-2” ,
git log --after=“today” y
git log --after=“2018-1-2” --before=“today” - Commits para localizar por fechas.
git log --author=“Name Author” - Commits realizados por autor que cumplan exactamente con el nombre.
git log --grep=“INVIE” - Busca los commits que cumplan tal cual está escrito entre las comillas.
git log --grep=“INVIE” –i- Busca los commits que cumplan sin importar mayúsculas o minúsculas.
git log – index.html- Busca los commits en un archivo en específico.
git log -S “Por contenido”- Buscar los commits con el contenido dentro del archivo.
git log > log.txt - guardar los logs en un archivo txt